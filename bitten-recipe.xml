<build
  xmlns:python="http://bitten.cmlenz.net/tools/python"
  xmlns:svn="http://bitten.cmlenz.net/tools/svn"
  xmlns:sh="http://bitten.cmlenz.net/tools/sh"
>
  <step id="checkout-src" description="Checkout the source code">
    <svn:checkout url="https://katfs/svnDS"
                  path="${path}" revision="${revision}"/>
  </step>

  <step id="checkout-tools" description="Checkout tools directory">
    <svn:checkout url="https://katfs/svnDS"
                  path="code/tools" revision="${revision}"
                  dir="tools"/>
  </step>

  <step id="build" description="Compile to byte code">
    <python:distutils command="build"/>
  </step>

  <step id="copy-egg" description="Create an egg distribution and copy it out" onerror="continue">
    <python:distutils command="bdist_egg"/>
    <sh:exec executable="tools/cp_built_eggs.py"
    args="--revision ${revision}"
    output="build/cp_built_eggs.out"/>
  </step>

  <step id="test" description="Run unit tests" onerror="continue">
    <python:distutils command="unittest"
     options="
      --xml-output build/test-results.xml
      --coverage-summary build/test-coverage.txt
      --coverage-dir build/coverage
      --coverage-method figleaf"
    />
    <python:unittest file="build/test-results.xml"/>
    <python:figleaf summary="build/test-coverage.txt" 
        include="scape/*" exclude="*/test/*"/>
  </step>

  <step id="lint" description="Analyse source code" onerror="continue">
    <sh:exec executable="python" 
     args="-c 'from subprocess import call;
               import sys;
               ret = call([&quot;pylint&quot;,
                           &quot;--output-format=parseable&quot;,
                           &quot;--rcfile=tools/svnds-code.pylintrc&quot;,
                           &quot;katuilib&quot;]);
               sys.exit(ret if (ret &gt; 31 or ret &lt; 0) else 0);'"
     output="build/pylint.out"/>
    <python:pylint file="build/pylint.out"/>
  </step>

</build>
